<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Bootstrap demo</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT" crossorigin="anonymous" />
</head>
<style>
  .msg {
    border: 1px solid grey;
    align-items: center;
    max-width: 30vw;
    margin-top: 0.5vw;
    background-color: rgb(240, 240, 240);
    justify-content: left;
    overflow: auto
    ;
  }


  .online {
    position: relative;
  }

  .list small {
    display: block;
    margin-left: 1.5vw;

    margin-top: -20px;
    margin-bottom: 1vw;
  }
  .loggedIn{
    display: flex;

  }


  .list small::before {
    content: "";
    position: absolute;
    left: 0.3vw;
    width: 5px;
    height: 5px;
    border-radius: 50%;
    background-color: green;
    margin-top: 0.5vw;
  }

  .loggedIn small::after {
    content: "";
    position: absolute;
    width: 5px;
    height: 5px;
    margin-left: 0.5vw;
    border-radius: 50%;
    background-color: green;
    margin-top: 0.5vw;
  }
  
  @media(max-width: 500px) {
  .online{
    margin-right:11vw;
    max-width: 10vmax;
    height: fit-content;
    background-color: green;
  }
  .loggedIn{
    font-size: 4vmax;
    display: flex;
  }
  .loggedIn small::after {
    content: "";
    position: absolute;
    width: 20px;
    margin-left: 1vw;
    height: 20px;
    border-radius: 50%;
    background-color: green;
  }
}
</style>

<body>
  <div id="overflow" style="
        min-width: 100vw;
        min-height: 100vh;
        z-index: 999;
        background-color: rgba(82, 81, 81, 0.473);
      " class="position-absolute d-flex align-items-center container">
    <div style="width: 50%" class="bg-light container">
      <label for="inputPassword5" class="form-label">Cool Fake Name</label>
      <input type="text" id="inputPassword5" class="form-control" aria-describedby="passwordHelpBlock" />
      <div id="passwordHelpBlock" class="form-text">
        Your name must be fake, contain letters and numbers, and must not
        contain spaces, special characters, or emoji.
      </div>

      <button type="button" style="width: 100%" id="nameSetter" class="btn btn-primary mt-2 btn-lg">
        Enter the chat
      </button>
    </div>
  </div>

  <!-- main chats -->
  <div style="
        min-height: 100vh;
        width: 80vh;
        border: 2px solid rgb(196, 196, 196);
      " class="position-relative container">
    <div style="min-width: 100px;right: 0%;" class="mt-2 position-absolute online">
      <h6 style="cursor: pointer" id="showUsers">
        Online(<span id="onlinenum"></span>)
      </h6>
      <div style="display: none" class="list position-relative"></div>
    </div>
    <div style="min-height: 82vh;width: 100%;border: 1px solid rgba(197, 40, 40, 0.534);padding: 1vw 1vw;" id="msgs"
      class="conatiner">
      <div style="min-height: 1vh;width: 25vw;" class="loggedIn"></div>
      <i style="font-size: 1.2vw;">Walki'n Chats</i> <span class="typing"></span>
    </div>
    <div style="min-height: 5vh; width: 100%" class="conatiner">
      <div class="form-floating mt-2">
        <textarea class="form-control" placeholder="Leave a comment here" id="floatingTextarea"></textarea>
        <label for="floatingTextarea">Write your message here...</label>
        <button style="width: 100%" id="sendBtn" type="button" class="btn btn-primary btn-lg mt-2">
          Send message
        </button>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8"
    crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.5.2/socket.io.js"
    integrity="sha512-VJ6+sp2E5rFQk05caiXXzQd1wBABpjEj1r5kMiLmGAAgwPItw1YpqsCCBtq8Yr1x6C49/mTpRdXtq8O2RcZhlQ=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
  <script>
    var socket = io();
    var username = "";

    //creating username
    const inputText = document.querySelector("#inputPassword5");
    const overflow = document.querySelector("#overflow");
    const submit = document
      .querySelector("#nameSetter")
      .addEventListener("click", function () {
        // console.log(inputText.value);
        if (inputText.value.trim().length > 0) {
          socket.emit("name", inputText.value);
          overflow.classList.add("d-none");
          socket.on("name", function (name) {
            console.log(name);

            username = name;
          });
        }
      });

    //sending message to backend and receiving it

    const floatingTextarea = document.getElementById("floatingTextarea");
    const sendBtn = document.getElementById("sendBtn");
    const msgs = document.getElementById("msgs");
    sendBtn.addEventListener("click", function () {
      if (floatingTextarea.value.trim().length > 0) {
        socket.emit("msg", floatingTextarea.value);
        floatingTextarea.value = "";
        floatingTextarea.focus();
      }
    });
    //showing send msgs
    socket.on("allmsg", function (data) {
      console.log(data);
      msgs.innerHTML += `<div  class="msg"><span>${data.name} : </span> <h6>${data.msg}</h6></div>  `;
      document.querySelector(".typing").innerHTML = ""
    });

    //entered the chat
    socket.on("name", function (name) {
      msgs.innerHTML += `<div  class="msg"><span>${name} : </span> <h6>entered the chat</h6></div>  `;
    });

    //left the chat
    socket.on("disconnectedUser", function (disconnectedUser) {
      msgs.innerHTML += `<div  class="msg"><span>${disconnectedUser} : </span> <h6>left the chat</h6></div>  `;
    });

    //logic for user is typing a message
    floatingTextarea.addEventListener("keypress" , (e)=>{
      socket.emit("typing" , floatingTextarea.value)
    })

    //catching who is typing
    socket.on("typing", function (whoIsTyping) {
      document.querySelector(".typing").innerHTML = `<div class="typing"><span>${whoIsTyping} : </span> <h6>typing...</h6></div>  `;
      setTimeout(() => {
        document.querySelector(".typing").innerHTML = ""
      }, 3000);
      
    })

    //online users
    const onlineUsers = document.querySelector("#onlinenum");
    const list = document.querySelector(".list");

    socket.on("onlineusers", function (allUsers) {
      var clutter = `<hr>`;
      onlineUsers.innerHTML = allUsers.length;
      allUsers.forEach((element) => {
        clutter += `<small> ${element}</small>`;
      });

      list.innerHTML = clutter;
    });

    //show online users
    var showUsers = document.querySelector("#showUsers");
    // var list = document.querySelector(".list")
    showUsers.addEventListener("click", function (e) {
      if (list.style.display === "none") {
        list.style.display = "initial";
      } else {
        list.style.display = "none";
      }
    });

    //loggedIn user
    var loggedIn = document.querySelector(".loggedIn")
    socket.on("loggedIn", function (name) {
      loggedIn.innerHTML += `<small>${name}</small>`;
    });
  </script>
</body>

</html>